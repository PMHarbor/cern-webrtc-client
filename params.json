{
  "name": "Cern-webrtc-client",
  "tagline": "This application is a Vidyo WebRTC Client. It is connected to the Vidyo infraestructure and allows people to make multi user videoconference calls.",
  "body": "# CERN WebRTC Vidyo Client\r\n\r\nThis application is a Vidyo WebRTC Client. It is connected to the Vidyo infraestructure and allows people to make multi user videoconference calls.\r\nIt is built using Javascript, Ember-Cli and Vidyo technologies.\r\n\r\n\r\n\r\n## Compatibility\r\n\r\n- Firefox >= 45\r\n- Chrome >= 50\r\n\r\n## Features\r\n\r\n- Multi user videoconferencing with video and audio support.\r\n- Desktop notifications.\r\n- Public and private chats.\r\n- Audio/video device selection.\r\n- Oauth2 authentication.\r\n- Support for private and public meetings.\r\n- Screen sharing (using Firefox and Chrome plugins).\r\n\r\n## Quick guide\r\n\r\nIf you don't have experience using Ember-cli, go to the [\"Tutorials\"](https://gitlab.cern.ch/fernanre/webrtc-vidyo-client/wikis/tutorials) section.\r\n\r\n### Prerequisites\r\n- node >= 4.2.4\r\n- npm >= 3.10.5\r\n- bower >= 1.8.0\r\n- phantomjs >= 2.1.1\r\n\r\n### Build the application\r\n\r\n```\r\nnpm install && bower install\r\n```\r\n\r\n### Generate Self-signed certificates\r\n\r\n1. `openssl genrsa -des3 -out server.key 2048`\r\n2. `openssl rsa -in server.key -out server.key.insecure`\r\n3. `mv server.key server.key.secure`\r\n4. `mv server.key.insecure server.key`\r\n5. `openssl req -new -key server.key -out server.csr`\r\n6. `openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt`\r\n\r\nMove the generated files to the `ssl` folder.\r\n\r\n### Setup your configuration\r\n\r\nCreate a `config/.env` file using `config/.env.sample` as template.\r\n\r\n### Set up your Vidyo WebRTC plugin files\r\n\r\nCopy your Vidyo plugin files to `vendor/vidyo`.\r\n\r\n### Run the application\r\n\r\n```\r\nember s -ssl=true\r\n```\r\n\r\n### Test the application\r\n\r\n```\r\nember test --server\r\n```\r\n\r\n### Build for production and qa\r\n#### QA\r\n```\r\nnpm run build_qa\r\n```\r\n#### Production\r\n```\r\nnpm run build_production\r\n```\r\n\r\nThe generated files will be available in `dist/qa` and `dist/production`.\r\n\r\n## Configuration\r\n\r\n`ROOT_URL=/`\r\nPath of the project\r\n`SENTRY_DSN`\r\nIf using Sentry for logging, set it's DSN\r\n`SENTRY_DEVELOPMENT`\r\nSet the development mode for Sentry (true|false)\r\n\r\n`SENTRY_DEBUG`\r\nSet the debug mode for Sentry (true|false)\r\n\r\n`SENTRY_CDN=https://cdn.ravenjs.com/1.2.0/raven.min.js`\r\nCDN Url for the Sentry Javascript plugin.\r\n\r\n`BACKEND_SERVER_URL`\r\nURL of the API and authentication backends.\r\n\r\n`OAUTH2_API_KEY`\r\nOauth ID.\r\n\r\n`OAUTH2_CALLBACK_URL`\r\nOauth callback for authentication.\r\n\r\n`PIWIK_ID`\r\nPiwik ID if using Piwik for analytics.\r\n\r\n`PIWIK_URL`\r\nPiwik URL if using Piwik for analytics.\r\n\r\n`SESSION_MANAGER`\r\nURL of the Vidyo WebRTC session manager.\r\n\r\n`VIDYO_PORTAL_URL`\r\nURL of the Vidyo Portal to generate the room URLs.\r\n\r\n`FEEDBACK_URL`\r\nURL to redirect to on the feedback button.",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}